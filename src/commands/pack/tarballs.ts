import {Command, Flags} from '@oclif/core'

import * as Tarballs from '../../tarballs'

export default class PackTarballs extends Command {
  static description = `packages oclif CLI into tarballs

This can be used to create oclif CLIs that use the system node or that come preloaded with a node binary.
`

  static flags = {
    parallel: Flags.boolean({description: 'build tarballs in parallel'}),
    root: Flags.string({char: 'r', default: '.', description: 'path to oclif CLI root', required: true}),
    tarball: Flags.string({
      char: 'l',
      description: 'optionally specify a path to a tarball already generated by NPM',
      required: false,
    }),
    targets: Flags.string({char: 't', description: 'comma-separated targets to pack (e.g.: linux-arm,win32-x64)'}),
    xz: Flags.boolean({allowNo: true, description: 'also build xz'}),
  }

  async run(): Promise<void> {
    if (process.platform === 'win32') throw new Error('pack does not function on windows')
    const {flags} = await this.parse(PackTarballs)
    const buildConfig = await Tarballs.buildConfig(flags.root, {targets: flags?.targets?.split(','), xz: flags.xz})
    if (buildConfig.targets.length === 0) {
      throw new Error('Please specify one or more valid targets.')
    }

    await Tarballs.build(buildConfig, {
      parallel: flags.parallel,
      tarball: flags.tarball,
    })
  }
}
