#!/usr/bin/env node

const sh = require('shelljs')
const fs = require('fs-extra')
const path = require('path')

sh.set('-ev')

sh.exec('yarn link')
const version = process.argv[2]

const examples = [
  'example-multi-cli-javascript',
  'example-multi-cli-typescript',
  'example-single-cli-javascript',
  'example-single-cli-typescript',
]

examples.forEach(example => {
  const [, type,, format] = example.split('-')

  const options = format === 'typescript' ?
    '--options=typescript,mocha,semantic-release' :
    '--options=mocha,semantic-release'

  sh.mkdir('tmp/examples')
  const d = path.join(__dirname, '../tmp/examples', example)
  sh.exec(`git clone git@github.com:dxcli/${example} ${d}`)
  sh.cd(d)

  sh.rm('-rf', [
  '.circleci',
  '.editorconfig',
  '.eslintignore',
  '.eslintrc',
  '.gitattributes',
  '.gitignore',
  'README.md',
  'appveyor.yml',
  'bin',
  'lib',
  'package-scripts.js',
  'src',
  'test',
  'tsconfig.json',
  'tslint.json',
  'yarn.lock',
  ])

  const pjson = fs.readJSONSync('package.json')
  fs.outputJSONSync('package.json', {
    name: `@dxcli/${example}`,
    repository: `dxcli/${example}`,
    author: pjson.author,
    version: pjson.version,
    description: pjson.description,
  })

  sh.exec(`create-dxcli ${type} --force --defaults ${options}`)
  sh.exec('git add -A')
  try {
    sh.exec(`git commit -m "fix: create-dxcli ${version}"`)
    sh.exec('git push')
  } catch (err) {
    console.error(err)
  }
})
